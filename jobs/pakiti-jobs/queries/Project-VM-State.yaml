- defaultTab: output
  description: A query to get the general patching state of all cloud VMs in a given project
  executionEnabled: true
  group: Pakiti-Jobs/Queries
  id: 91e13173-38b4-490b-a813-f8f388519ecd
  loglevel: INFO
  loglimit: 100MB
  loglimitAction: halt
  loglimitStatus: failed
  name: Project-VM-State
  nodeFilterEditable: false
  options:
  - description: Defaults to user admin-rundeck
    label: Openstack Administrator Password
    name: OpenstackAdminPassword
    required: true
    secure: true
    storagePath: keys/admins/admin-rundeck
    valueExposed: true
  - description: 'The Id of the project you want information on. '
    label: Openstack Project ID
    name: ProjectID
    required: true
    value: 4de86830e89b4a46b590536571b6ccd4
  - description: The email address to the send the report to
    label: Email Address
    name: EmailAddress
    required: true
    value: cloud-support@gridpp.rl.ac.uk
  retry: '0'
  scheduleEnabled: true
  sequence:
    commands:
    - script: "#!/bin/bash\n\nexport OS_AUTH_URL=https://openstack.stfc.ac.uk:5000/v3\n\
        export OS_PROJECT_ID=4de86830e89b4a46b590536571b6ccd4\nexport OS_PROJECT_NAME=\"\
        admin\"\nexport OS_USER_DOMAIN_NAME=\"default\"\n\nif [ -z \"$OS_USER_DOMAIN_NAME\"\
        \ ]; then unset OS_USER_DOMAIN_NAME; fi\n\nexport OS_PROJECT_DOMAIN_ID=\"\
        38372510d9bb4ac7916178b062d387de\"\n\nif [ -z \"$OS_PROJECT_DOMAIN_ID\" ];\
        \ then unset OS_PROJECT_DOMAIN_ID; fi\n\nunset OS_TENANT_ID\nunset OS_TENANT_NAME\n\
        \nexport OS_USERNAME=\"admin-rundeck\"\nexport OS_PASSWORD=@option.OpenstackAdminPassword@\n\
        export OS_REGION_NAME=\"RegionOne\"\n\nif [ -z \"$OS_REGION_NAME\" ]; then\
        \ unset OS_REGION_NAME; fi\n\nexport OS_INTERFACE=public\nexport OS_IDENTITY_API_VERSION=3\n\
        \nDATE=\"\"\nPROJECTNAME=\"\"\nEMAILS=()\n\nif [[ ! -e \"reports\" ]]; then\n\
        \    echo \"No Reports Directory Found - Creating...\"\n    mkdir \"reports\"\
        \nfi    \n\nDATE=$(date +%Y%m%d-%H%M)\n\nPROJECTNAME=$(openstack project show\
        \ @option.ProjectID@ | grep name | cut -d \"|\" -f3 | awk '{$1=$1};1')\n\n\
        touch reports/${DATE}-project-@option.ProjectID@.txt\n\necho \"General VM\
        \ Patching State Report for Project - $PROJECTNAME\"> reports/${DATE}-@option.ProjectID@.txt\n\
        \necho Number Of VMs Collated: $(grep -wnl @option.ProjectID@ collated/machine_files/*\
        \ | wc -l) >> reports/${DATE}-project-@option.ProjectID@.txt\n\necho Not Reporting\
        \ to Pakiti: $(grep -rL @option.ProjectID@ collated/machine_files/* | xargs\
        \ grep -wnl \"No Host Information Reported to Pakiti\" | wc -l) >> reports/${DATE}-project-@option.ProjectID@.txt\n\
        \necho Machines with Out of Date Packages: $(grep -wnl @option.ProjectID@\
        \ collated/machine_files/* | xargs grep -nl \"package:\" | wc -l) >> reports/${DATE}-project-@option.ProjectID@.txt\n\
        \necho Machines with CVEs: $(grep -wnl @option.ProjectID@ collated/machine_files/*\
        \ | xargs grep -nl \"CVE:\" | wc -l) >> reports/${DATE}-project-@option.ProjectID@.txt\n\
        \nwhile IFS= read -r line; do\n    EMAILS+=( \"$line\" )\ndone < <( grep -wnl\
        \ @option.ProjectID@ collated/machine_files/* | xargs grep email | cut -d\
        \ \":\" -f3 | sort --unique )\n\nfor x in \"${EMAILS[@]}\"; do\n    echo User\
        \ Email: $x >> reports/${DATE}-project-@option.ProjectID@.txt\ndone\n\necho\
        \ '' | mailx -s 'Project VM Infor Query for project @option.ProjectID@' -a\
        \ reports/${DATE}-project-@option.ProjectID@.txt @option.EmailAddress@"
    keepgoing: false
    strategy: node-first
  timeout: 10m
  uuid: 91e13173-38b4-490b-a813-f8f388519ecd
