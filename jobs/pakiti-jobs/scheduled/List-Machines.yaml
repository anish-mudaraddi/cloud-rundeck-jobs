- defaultTab: output
  description: |-
    This Job runs every 2 hours, listing all openstack machines with a valid ID from
    the projects gathered in the previous job
  executionEnabled: true
  group: Pakiti-Jobs/Scheduled
  id: 63d98573-cf8e-4282-adf9-9e647dd3dc75
  loglevel: INFO
  loglimit: 500MB
  loglimitAction: halt
  name: List-Machines
  nodeFilterEditable: false
  options:
  - description: |-
      Password for Openstack user admin-rundeck
      The password is stored locally and securely within Rundeck
    label: Openstack Administrator Password
    name: OpenstackAdminPassword
    required: true
    secure: true
    storagePath: keys/cloud/admins/admin-rundeck
    valueExposed: true
  retry: '0'
  schedule:
    dayofmonth:
      day: '*'
    month: '*'
    time:
      hour: 0/2
      minute: '10'
      seconds: '0'
    year: '*'
  scheduleEnabled: true
  sequence:
    commands:
    - script: "#!/bin/bash\n\n#Info: For more information/comments for this section\
        \ please view any\n#openstack api file\n\nexport OS_AUTH_URL=https://openstack.stfc.ac.uk:5000/v3\n\
        export OS_PROJECT_ID=4de86830e89b4a46b590536571b6ccd4\nexport OS_PROJECT_NAME=\"\
        admin\"\nexport OS_USER_DOMAIN_NAME=\"default\"\n\nif [ -z \"$OS_USER_DOMAIN_NAME\"\
        \ ]; then unset OS_USER_DOMAIN_NAME; fi\n\nexport OS_PROJECT_DOMAIN_ID=\"\
        38372510d9bb4ac7916178b062d387de\"\n\nif [ -z \"$OS_PROJECT_DOMAIN_ID\" ];\
        \ then unset OS_PROJECT_DOMAIN_ID; fi\n\nunset OS_TENANT_ID\nunset OS_TENANT_NAME\n\
        \nexport OS_USERNAME=\"admin-rundeck\"\nexport OS_PASSWORD=@option.OpenstackAdminPassword@\n\
        export OS_REGION_NAME=\"RegionOne\"\n\nif [ -z \"$OS_REGION_NAME\" ]; then\
        \ unset OS_REGION_NAME; fi\n\nexport OS_INTERFACE=public\nexport OS_IDENTITY_API_VERSION=3\n\
        \nCHECK_MACHINES=()\nMACHINES=()\nPROJECTS=()\n\nif [[ ! -e \"list_files\"\
        \ ]]; then\n\techo \"No Lists Directory Found - Please Run Initialisation\
        \ Script - list_projects.sh\"\n\techo \"+ Exiting Job...\"\n\texit\nfi\n\n\
        if [[ ! -e \"list_files/project_list.txt\" ]]; then\n    echo \"No Project\
        \ List File Found - Please Run Initialisation Script - list_projects.sh\"\n\
        \    echo \"+ Exiting Job...\"\n    exit\nfi\n\nif [[ ! -e \"project_files\"\
        \ ]]; then\n\techo \"No Projects Directory Found - Creating...\"\n\tmkdir\
        \ \"project_files\"\nfi\n\nwhile IFS= read -r line; do\n\tPROJECTS+=( \"$line\"\
        \ )\ndone < <( cat list_files/project_list.txt | head -c -1 )\n\nfor x in\
        \ \"${PROJECTS[@]}\"; do\n\twhile IFS= read -r line; do\n\t\tMACHINES+=( \"\
        $line\" )\n\tdone < <( openstack server list --project $x | grep -v \"\\-\\\
        -\" | grep -v \"ID\" | cut -d \"|\" -f2 | awk '{$1=$1};1' | head -c -1 )\n\
        \techo \"Project $x - Getting Machines...\"\n\tif [[ ${#MACHINES[@]} > 0 ]];\
        \ then\n\t\tif [[ ! -e \"project_files/${x}.txt\" ]]; then\n\t\t\techo \"\
        Project File for $x Does Not Exist - Creating...\"\n\t\t\ttouch \"project_files/${x}.txt\"\
        \n\t\t\tfor y in \"${MACHINES[@]}\"; do\n\t\t\t\techo \"${y}\" >> \"project_files/${x}.txt\"\
        \n\t\t\t\techo \" + Adding Machine $y to File...\"\n\t\t\tdone\n\t\telse\n\
        \t\t\techo \"Project File for $x Exists - Skipping Creation...\"\n\t\t\tfor\
        \ y in \"${MACHINES[@]}\"; do\n\t\t\t\tif grep -qx \"$y\" \"project_files/${x}.txt\"\
        ; then\n\t\t\t\t\techo \" - Machine $y Already Exists in Project File - Skipping...\"\
        \n\t\t\t\telse\n\t\t\t\t\techo \"${y}\" >> \"project_files/${x}.txt\"\n\t\
        \                echo \" + Adding Machine $y to File...\"\n\t\t\t\tfi\n\t\t\
        \tdone\n\t\tfi\n\t\techo \" + Trimming Whitespace...\"\n\t\tperl -pi -e 'chomp\
        \ if eof' project_files/${x}.txt &>/dev/null\n\t\twhile IFS= read -r line;\
        \ do\n\t        CHECK_MACHINES+=( \"$line\" )\n\t    done < <( cat project_files/${x}.txt\
        \ | head -c -1 )\n\t    echo \"Checking Status of Machines in Project $x ...\"\
        \n\t    for y in \"${CHECK_MACHINES[@]}\"; do\n\t        openstack server\
        \ show $y &> /dev/null\n\t        if [[ $? == 1 ]]; then\n\t            echo\
        \ \" + Machine $y No Longer Exists - Removing from File...\"\n\t         \
        \   touch temp-move.txt\n                grep -v $y project_files/${x}.txt\
        \ >> temp-move.txt \n                mv temp-move.txt project_files/${x}.txt\n\
        \            fi\n        done\n        CHECK_MACHINES=()\n\telse\n\t\techo\
        \ \" + Project Has No Machines - Removing Project from List...\"\n\t\ttouch\
        \ temp.txt\n        grep -v $x list_files/project_list.txt >> temp.txt \n\
        \        mv temp.txt list_files/project_list.txt\n\tfi\n\tMACHINES=()\ndone\n\
        \necho \"Machine List Collated and Up to Date\""
    keepgoing: false
    strategy: node-first
  timeout: 1h
  uuid: 63d98573-cf8e-4282-adf9-9e647dd3dc75
